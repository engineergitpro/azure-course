name: Build and Deploy to AKS

on:
  workflow_dispatch:      # allows manual "Run workflow" button
  push:
    branches:
      - main              # trigger automatically on pushes to main

env:
  REGISTRY: demorgacr.azurecr.io
  IMAGE_NAME: webapp
  CLUSTER_NAME: demo-aks-cluster
  RESOURCE_GROUP: demo-aks-rg

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # -----------------------------
      # STEP 1: Checkout source code
      # -----------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # -----------------------------
      # STEP 2: Login to Azure
      # -----------------------------
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # -----------------------------
      # STEP 3: Login to Azure Container Registry
      # -----------------------------
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # -----------------------------
      # STEP 4: Build & Push Docker image to ACR
      # -----------------------------
      - name: Build and push Docker image
        run: |
          echo "Building Docker image for registry: $REGISTRY"
          docker build -t ${REGISTRY}/${IMAGE_NAME}:${{ github.sha }} aks/k8s-mysql-backend/webapp
          docker push ${REGISTRY}/${IMAGE_NAME}:${{ github.sha }}

      # -----------------------------
      # STEP 5: Set AKS context (connect to cluster)
      # -----------------------------
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}

     # -----------------------------
      # STEP 6: Deploy MySQL + WebApp manifests
      # -----------------------------
      - name: Deploy MySQL and WebApp to AKS
        run: |
          echo "Applying MySQL manifests..."
          kubectl apply -f aks/k8s-mysql-backend/mysql-db-pv.yaml
          kubectl apply -f aks/k8s-mysql-backend/mysql-db-deployment.yaml

          echo "Deploying WebApp..."
          # Create or update the webapp deployment and service
          kubectl apply -f aks/k8s-mysql-backend/webapp-deployment.yaml

          # âœ… Correct deployment name
          kubectl set image deployment/python-webapp python-webapp=${REGISTRY}/${IMAGE_NAME}:${{ github.sha }} || true

          # Wait until it's ready
          kubectl rollout status deployment/python-webapp
